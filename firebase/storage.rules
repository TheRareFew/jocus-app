rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Function to check if the file is a video
    function isVideo() {
      return request.resource.contentType.matches('video/.*');
    }
    
    // Function to check file size (max 500MB)
    function isValidSize() {
      return request.resource.size <= 500 * 1024 * 1024;
    }
    
    // Videos folder rules
    match /videos/{userId}/{videoId} {
      // Allow public read access for videos
      allow read: if true;
      
      // Allow upload if user is authenticated and owns the folder
      allow create: if
        request.auth != null &&
        request.auth.uid == userId &&
        isVideo() &&
        isValidSize();
        
      // Allow update/delete if user owns the folder
      allow update, delete: if
        request.auth != null &&
        request.auth.uid == userId;
    }

    // HLS folder rules - allow cloud function writes
    match /hls/{videoId}/{fileName} {
      // Allow public read access for HLS files
      allow read: if true;
      
      // Allow cloud functions to write HLS files
      allow write: if true;
    }

    // Thumbnails folder rules
    match /thumbnails/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Default deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
